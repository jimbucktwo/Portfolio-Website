{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jimmy_kf29rsy\\\\Documents\\\\GitHub\\\\react-practice\\\\src\\\\Work.js\",\n  _s = $RefreshSig$();\nimport './Work.css';\nimport { Header } from './Home';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Work() {\n  _s();\n  useEffect(() => {\n    const introElement = document.querySelector(\".work\");\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        introElement.classList.add(\"fade-in\");\n      } else {\n        introElement.classList.remove(\"fade-in\");\n      }\n    }, {\n      threshold: 0.3 // Adjust this value as needed\n    });\n    if (introElement) {\n      observer.observe(introElement);\n    }\n    return () => {\n      if (introElement) {\n        observer.unobserve(introElement);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Work, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Work;\nvar _c;\n$RefreshReg$(_c, \"Work\");","map":{"version":3,"names":["Header","useEffect","jsxDEV","_jsxDEV","Work","_s","introElement","document","querySelector","observer","IntersectionObserver","entry","isIntersecting","classList","add","remove","threshold","observe","unobserve","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/Jimmy_kf29rsy/Documents/GitHub/react-practice/src/Work.js"],"sourcesContent":["import './Work.css';\r\nimport {Header} from './Home';\r\nimport {useEffect} from 'react';\r\n\r\nexport default function Work() {\r\n    useEffect(() => {\r\n        const introElement = document.querySelector(\".work\");\r\n        const observer = new IntersectionObserver(\r\n          ([entry]) => {\r\n            if (entry.isIntersecting) {\r\n              introElement.classList.add(\"fade-in\");\r\n            } else {\r\n              introElement.classList.remove(\"fade-in\");\r\n            }\r\n          },\r\n          {\r\n            threshold: 0.3, // Adjust this value as needed\r\n          }\r\n        );\r\n    \r\n        if (introElement) {\r\n          observer.observe(introElement);\r\n        }\r\n    \r\n        return () => {\r\n          if (introElement) {\r\n            observer.unobserve(introElement);\r\n          }\r\n        };\r\n      }, []);\r\n      \r\n    return (\r\n        <div>\r\n        <Header/>\r\n        <div className=\"work\">\r\n        </div>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAO,YAAY;AACnB,SAAQA,MAAM,QAAO,QAAQ;AAC7B,SAAQC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3BJ,SAAS,CAAC,MAAM;IACZ,MAAMK,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IACpD,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxBN,YAAY,CAACO,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;MACvC,CAAC,MAAM;QACLR,YAAY,CAACO,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC;MAC1C;IACF,CAAC,EACD;MACEC,SAAS,EAAE,GAAG,CAAE;IAClB,CACF,CAAC;IAED,IAAIV,YAAY,EAAE;MAChBG,QAAQ,CAACQ,OAAO,CAACX,YAAY,CAAC;IAChC;IAEA,OAAO,MAAM;MACX,IAAIA,YAAY,EAAE;QAChBG,QAAQ,CAACS,SAAS,CAACZ,YAAY,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAER,oBACIH,OAAA;IAAAgB,QAAA,gBACAhB,OAAA,CAACH,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTpB,OAAA;MAAKqB,SAAS,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAClB,EAAA,CAlCuBD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}